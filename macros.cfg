########################################
# MACRO configurations
########################################

[idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
  {% set TARGET_TEMP = params.TARGET | default(220) | float %}
  SET_GCODE_VARIABLE MACRO=IDLE_TIMEOUT VARIABLE=temp_target VALUE={ TARGET_TEMP }
  M117 Idle but paused, maintaining bed temp.
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  {% else %}
  TURN_OFF_HEATERS
  M84
  {% endif %}
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  M117 Resuming Print...
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
    {% set TARGET_TEMP = printer["gcode_macro IDLE_TIMEOUT"].temp_target %}
    M109 S{TARGET_TEMP}
  {% endif %}  
  M117 Printing...
  RESUME_BASE {get_params}

[gcode_macro M600]
description: Filament Change
gcode:
    ;set where the toolhead will park during pause
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    M117 Pausing for color change
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#[gcode_macro G28]
#Only home what's needed
#rename_existing: G28.1
#gcode:
#  {% set only_unhomed = 'C' in rawparams.upper() %}
#  {% if 'X' not in rawparams.upper() and 'Y' not in rawparams.upper() and 'Z' not in rawparams.upper() %}
#    {% set home = 'XYZ' %}
#  {% else %}
#    {% set home = '' %}
#    {% if 'X' in rawparams.upper() %}{% set home = home + 'X' %}{% endif %}
#    {% if 'Y' in rawparams.upper() %}{% set home = home + 'Y' %}{% endif %}
#    {% if 'Z' in rawparams.upper() %}{% set home = home + 'Z' %}{% endif %}
#  {% endif %}
#  {% if 'x' in printer.toolhead.homed_axes and only_unhomed %}{% set home = home.replace('X', '') %}{% endif %}
#  {% if 'y' in printer.toolhead.homed_axes and only_unhomed %}{% set home = home.replace('Y', '') %}{% endif %}
#  {% if 'z' in printer.toolhead.homed_axes and only_unhomed %}{% set home = home.replace('Z', '') %}{% endif %}
#  {% if home %} G28.1 {home} {% endif %}

[gcode_macro Tram]
description: Level the bed
gcode:
  M118 Homing
  G28
  M118 Z Tilt Adjust
  Z_TILT_ADJUST
  M118 Bed Mesh
  BED_MESH_CALIBRATE
  SAVE_CONFIG
  M118 Done

[gcode_macro PID_Tune_All]
description: PID tune both heater and bed
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=200
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SAVE_CONFIG

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G91
  G1 Z5 X25 Y25 F600
  G90


[gcode_macro LOAD_FILAMENT]
description: Load filament
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% if printer["extruder"].temperature|int < printer.configfile.settings['extruder'].min_extrude_temp %}
      M109 S{printer.configfile.settings['extruder'].min_extrude_temp+30}
    {% endif %}
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% if printer["extruder"].temperature|int < printer.configfile.settings['extruder'].min_extrude_temp %}
      M109 S{printer.configfile.settings['extruder'].min_extrude_temp+30}
    {% endif %}
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro M204]
description: Set starting acceleration
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}
